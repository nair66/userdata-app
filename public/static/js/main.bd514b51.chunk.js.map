{"version":3,"sources":["components/Card.js","components/NewCard.js","components/App.js","reportWebVitals.js","index.js"],"names":["Card","className","onSubmit","event","props","updateUser","index","htmlFor","type","id","name","defaultValue","this","placeholder","email","address","onClick","deleteUser","React","Component","NewCard","addUser","App","state","users","addUserHandler","modifyStateAndDB","updateUserHandler","deleteUserHandler","action","a","preventDefault","data","target","value","reset","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","response","console","log","alert","fetchUsers","catch","err","userIndex","findIndex","item","_id","json","docs","setState","map","user","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEMA,E,4JAIJ,WAAU,IAAD,OACP,OACE,uBAAMC,UAAU,OAAOC,SAAU,SAACC,GAAD,OAAW,EAAKC,MAAMC,WAAW,EAAKD,MAAME,MAAOH,IAApF,UACE,qBAAKF,UAAU,cAAf,6BACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOM,QAAQ,YAAf,kBACA,uBACEC,KAAK,OACLC,GAAG,YACHC,KAAK,OACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMM,KACzBG,YAAY,YAGhB,sBAAKZ,UAAU,sBAAf,UACE,uBAAOM,QAAQ,aAAf,mBACA,uBACEC,KAAK,QACLC,GAAG,aACHC,KAAK,QACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMU,MACzBD,YAAY,yBAIlB,sBAAKZ,UAAU,aAAf,UACE,uBAAOM,QAAQ,eAAf,qBACA,uBACEC,KAAK,OACLC,GAAG,eACHC,KAAK,UACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMW,QACzBF,YAAY,oBAGhB,sBAAKZ,UAAU,YAAf,UACE,wBAAQO,KAAK,SAASP,UAAU,4BAAhC,2BAGA,wBACEO,KAAK,SACLP,UAAU,0BACVe,QAAS,SAACb,GAAD,OAAW,EAAKC,MAAMa,WAAW,EAAKb,MAAME,MAAOH,IAH9D,mC,GA/CSe,IAAMC,WA2DVnB,IC3DToB,E,4JACJ,WAAU,IAAD,OACP,OACE,uBAAMnB,UAAU,OAAOC,SAAU,SAACC,GAAD,OAAW,EAAKC,MAAMiB,QAAQlB,IAA/D,UACE,qBAAKF,UAAU,cAAf,4BACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOM,QAAQ,YAAf,kBACA,uBACEC,KAAK,OACLC,GAAG,YACHC,KAAK,OACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMM,KACzBG,YAAY,YAGhB,sBAAKZ,UAAU,sBAAf,UACE,uBAAOM,QAAQ,aAAf,mBACA,uBACEC,KAAK,QACLC,GAAG,aACHC,KAAK,QACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMU,MACzBD,YAAY,yBAIlB,sBAAKZ,UAAU,aAAf,UACE,uBAAOM,QAAQ,eAAf,qBACA,uBACEC,KAAK,OACLC,GAAG,eACHC,KAAK,UACLT,UAAU,eACVU,aAAcC,KAAKR,MAAMW,QACzBF,YAAY,oBAGhB,qBAAKZ,UAAU,YAAf,SACE,wBAAQO,KAAK,SAASP,UAAU,kBAAhC,mC,GAzCYiB,IAAMC,WAkDbC,IC/CTE,G,kNACJC,MAAQ,CACNC,MAAO,I,EAQTC,eAAiB,SAACtB,GAChB,EAAKuB,iBAAiB,MAAO,IAAKvB,I,EAGpCwB,kBAAoB,SAAClB,EAAIN,GACvB,EAAKuB,iBAAiB,SAAUjB,EAAIN,I,EAGtCyB,kBAAoB,SAACnB,EAAIN,GACvB,EAAKuB,iBAAiB,SAAUjB,EAAIN,I,EAGtCuB,iB,uCAAmB,WAAOG,EAAQpB,EAAIN,GAAnB,qBAAA2B,EAAA,yDACjB3B,EAAM4B,iBACFP,EAFa,YAED,EAAKD,MAAMC,OAEZ,QAAXK,EAJa,uBAKTG,EAAO,CACXtB,KAAMP,EAAM8B,OAAOvB,KAAKwB,MACxBpB,MAAOX,EAAM8B,OAAOnB,MAAMoB,MAC1BnB,QAASZ,EAAM8B,OAAOlB,QAAQmB,OAEhC/B,EAAM8B,OAAOE,QAVE,SAWTC,MAAM,QAAS,CACnBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUd,KAEpBe,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,MAAM,+BACN,EAAKC,gBAENC,OAAM,SAACC,GACNH,MAAM,0BACNF,QAAQC,IAAI,oBAAqBI,MA/BtB,OAiCfL,QAAQC,IAAI,cAjCG,UAoCF,WAAXrB,EApCa,oBAqCTG,EAAO,CACXtB,KAAMP,EAAM8B,OAAOvB,KAAKwB,MACxBpB,MAAOX,EAAM8B,OAAOnB,MAAMoB,MAC1BnB,QAASZ,EAAM8B,OAAOlB,QAAQmB,QAMb,KAJbqB,EAAY/B,EAAMgC,WAAU,SAACC,GACjC,OAAOA,EAAKC,MAAQjD,MA3CP,wBA+CbwC,QAAQC,IAAI,+CA/CC,kCAkDflB,EAAK0B,IAAMjD,EACXwC,QAAQC,IAAIlB,GACZR,EAAM+B,GAAavB,EApDJ,UAsDTI,MAAM,QAAS,CACnBC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUtB,EAAM+B,MAE1BR,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,MAAM,6BACN,EAAKC,gBAENC,OAAM,SAACC,GACNH,MAAM,yBACNF,QAAQC,IAAI,oBAAqBI,MA1EtB,WA8EF,WAAXzB,EA9Ea,kCA+ETO,MAAM,QAAS,CACnBC,OAAQ,SACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CAAEY,IAAKjD,MAE3BsC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZG,MAAM,6BACN,EAAKC,gBAENC,OAAM,SAACC,GACNH,MAAM,yBACNF,QAAQC,IAAI,oBAAqBI,MAnGtB,4C,wJAjBnB,sBAAAxB,EAAA,sDAEElB,KAAKwC,aACLH,QAAQC,IAAI,oBAHd,gD,qHAyHA,mCAAApB,EAAA,6DACMN,EAAQ,GADd,SAEQY,MAAM,SAAU,CACpBC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,gBAEfI,MAAK,SAACC,GACL,OAAOA,EAASW,UAEjBZ,MAAK,SAACa,GACLpC,EAAQoC,EACR,EAAKC,SAAS,CAAErC,MAAM,YAAKA,QAE5B6B,OAAM,SAACC,GACNH,MAAM,6BACNF,QAAQC,IAAI,oBAAqBI,MAvBvC,2C,0EA2BA,WAAU,IAAD,OACP,OACE,qCACG1C,KAAKW,MAAMC,MAAMsC,KAAI,SAACC,GACrB,OACE,cAAC,EAAD,CACEzD,MAAOyD,EAAKL,IAEZhD,KAAMqD,EAAKrD,KACXK,QAASgD,EAAKhD,QACdD,MAAOiD,EAAKjD,MACZT,WAAY,EAAKsB,kBACjBV,WAAY,EAAKW,mBALZmC,EAAKL,QAUhB,cAAC,EAAD,CAASrC,QAAST,KAAKa,wB,GA1KbP,IAAMC,YA+KTG,ICxKA0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bd514b51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Card extends React.Component {\r\n  // onChange() {\r\n  //   console.log('Change to render');\r\n  // }\r\n  render() {\r\n    return (\r\n      <form className=\"card\" onSubmit={(event) => this.props.updateUser(this.props.index, event)}>\r\n        <div className=\"card-header\"> Existing User </div>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputName\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputName\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              defaultValue={this.props.name}\r\n              placeholder=\"Jane\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputEmail\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              defaultValue={this.props.email}\r\n              placeholder=\"Jane@gmail.com\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputAddress\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputAddress\"\r\n            name=\"address\"\r\n            className=\"form-control\"\r\n            defaultValue={this.props.address}\r\n            placeholder=\"1234 Main St\"\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          <button type=\"submit\" className=\"btn btn-primary btn-green\">\r\n            Apply Changes\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-red\"\r\n            onClick={(event) => this.props.deleteUser(this.props.index, event)}>\r\n            Delete User\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nclass NewCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <form className=\"card\" onSubmit={(event) => this.props.addUser(event)}>\r\n        <div className=\"card-header\"> Add New User </div>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputName\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputName\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              defaultValue={this.props.name}\r\n              placeholder=\"Jane\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputEmail\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              defaultValue={this.props.email}\r\n              placeholder=\"Jane@gmail.com\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputAddress\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"inputAddress\"\r\n            name=\"address\"\r\n            className=\"form-control\"\r\n            defaultValue={this.props.address}\r\n            placeholder=\"1234 Main St\"\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-10\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add new user\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCard;\r\n","import React from 'react';\nimport Card from './Card';\nimport NewCard from './NewCard';\nimport '../App.css';\n\nclass App extends React.Component {\n  state = {\n    users: [],\n  };\n\n  async componentDidMount() {\n    //TODO Connect to SERVER and update State\n    this.fetchUsers();\n    console.log('Component loaded');\n  }\n  addUserHandler = (event) => {\n    this.modifyStateAndDB('add', ' ', event);\n  };\n\n  updateUserHandler = (id, event) => {\n    this.modifyStateAndDB('update', id, event);\n  };\n\n  deleteUserHandler = (id, event) => {\n    this.modifyStateAndDB('delete', id, event);\n  };\n\n  modifyStateAndDB = async (action, id, event) => {\n    event.preventDefault();\n    let users = [...this.state.users];\n\n    if (action === 'add') {\n      const data = {\n        name: event.target.name.value,\n        email: event.target.email.value,\n        address: event.target.address.value,\n      };\n      event.target.reset();\n      await fetch('/user', {\n        method: 'POST',\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached,\n        credentials: 'include', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      })\n        .then((response) => {\n          console.log(response);\n          alert('Successfully added new user');\n          this.fetchUsers();\n        })\n        .catch((err) => {\n          alert('Cound not add new user');\n          console.log('error using fetch', err);\n        });\n      console.log('Added user');\n    }\n\n    if (action === 'update') {\n      const data = {\n        name: event.target.name.value,\n        email: event.target.email.value,\n        address: event.target.address.value,\n      };\n      const userIndex = users.findIndex((item) => {\n        return item._id === id;\n      });\n\n      if (userIndex === -1) {\n        console.log('Error while updating: id not found in state');\n        return;\n      }\n      data._id = id;\n      console.log(data);\n      users[userIndex] = data;\n\n      await fetch('/user', {\n        method: 'PUT',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(users[userIndex]),\n      })\n        .then((response) => {\n          console.log(response);\n          alert('Updated user successfully');\n          this.fetchUsers();\n        })\n        .catch((err) => {\n          alert('Unable to update user');\n          console.log('error using fetch', err);\n        });\n    }\n\n    if (action === 'delete') {\n      await fetch('/user', {\n        method: 'DELETE',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({ _id: id }),\n      })\n        .then((response) => {\n          console.log(response);\n          alert('Deleted user successfully');\n          this.fetchUsers();\n        })\n        .catch((err) => {\n          alert('Unable to delete user');\n          console.log('error using fetch', err);\n        });\n    }\n  };\n\n  async fetchUsers() {\n    let users = [];\n    await fetch('/users', {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((docs) => {\n        users = docs;\n        this.setState({ users: [...users] });\n      })\n      .catch((err) => {\n        alert('Unable to fetch all users');\n        console.log('error using fetch', err);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.users.map((user) => {\n          return (\n            <Card\n              index={user._id}\n              key={user._id}\n              name={user.name}\n              address={user.address}\n              email={user.email}\n              updateUser={this.updateUserHandler}\n              deleteUser={this.deleteUserHandler}\n            />\n          );\n        })}\n\n        <NewCard addUser={this.addUserHandler} />\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}